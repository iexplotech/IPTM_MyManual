#################################################################
# Manual: Setup IPTM Normal Node 2020 in Windows 10 OS          #
# Prepare By: Dr. Mohd Anuar Mat Isa                            #
# Version: 1.1, 11 May 2020                                     #
# License: GNU GPL3, www.iexplotech.com, github.com/iexplotech  #
#################################################################

* Open this manual using Notepad++ for better view!

#### Initial Setup: Download Files ####
# Open command line (Windows Terminal). Follow exactly this command except drive D: or C:
# All Steps must Successfull! if not, do it in windows gui

// 1. Create new project directory either in drive D: or C: let uses drive D:
D:     // press enter
mkdir IPTM2020
cd IPTM2020
mkdir IPTM_TESTNET2020
cd IPTM_TESTNET2020

// Now you are in directory: D:\IPTM2020\IPTM_TESTNET2020
// 2. You are in Windows Terminal. Download wget for windows
certutil.exe -urlcache -split -f "https://github.com/iexplotech/wget/releases/download/1.20.3/wget.exe" wget.exe

// 3. You are in Windows Terminal. Download geth for windows.  This is the stable release for IPTM Testnet.
// This is the previous version of IPTM geth
// wget https://github.com/iexplotech/geth/releases/download/1.9.7-stable/geth_windows.zip -O geth_windows.zip
// This is the latest IPTM geth
wget https://github.com/iexplotech/geth/releases/download/1.9.13/geth_windows.zip -O geth_windows.zip

// 4. You are in Windows Terminal. Extract geth_windows.zip
tar -xvf geth_windows.zip

// 5. You are in Windows Terminal. Download Genesis/Configuration for IPTM Testnet 2020
wget https://raw.githubusercontent.com/iexplotech/IPTM_Genesis/master/iptm_testnet_genesis_2020.json -O iptm_testnet_genesis_2020.json

// 6. You are in Windows Terminal. Create start_cmd.bat file
echo cmd> start_cmd.bat
dir /w


#### Setup Geth Client in Windows OS ####
#1 open windows console/terminal
start_cmd.bat	(double click this file)


#2 You are in Windows Terminal
#  Show geth version
geth version


#3 You are in Windows Terminal
#  !Please use your IPTM node account that previously created if you have it. Everthing gone if you are using new account!.
#  copy your IPTM node account into this folder "data_IPTM\node1\chain-data\keystore\" after Step 5!
#  or create new account as belows:
#  create ETH Account/Address directly using geth
#  please use simple password for easy to remember such as "123456". This just for exercise.. not for the actual one.
#  write you password in paper and store in safe place.
#  forgot your Password? We encountered this problem many times. We cannot help you to recover the password.
geth account new --datadir accounts/
dir accounts/keystore/


#4 You are in Windows Terminal
#  Open folder accounts\keystore
#  If you have previous eth account, copy it into this folder. Then you can use the previous eth account or address
#  your eth address & account is stored here


#5  You are in Windows Terminal
#  create genesis block for "????-Node" you use your name e.g. "Mohd_Anuar-Node"
#  this step in used for one time only for creating the block 0
#  do not change --datadir path!
geth -identity "????-Node" init iptm_testnet_genesis_2020.json --datadir data_IPTM/node1/chain-data


#6 You are in Windows Terminal
#  copy your eth account in step #4 into folder D:\IPTM2020\IPTM_TESTNET2020\data_IPTM\node1\chain-data\keystore
#  example command as follows
copy accounts\keystore\UTC--* data_IPTM\node1\chain-data\keystore

# Note: Steps #3,#4,#5,#6 mostly used one time only for creting the genesis block 0
#       Step  #7 is the most frequently used to run your geth node


#7 You are in Windows Terminal
#  start your node using this command. You always use this command to run your node after close it
#  you may connect to your normal node (not sealer!) using remix to post smart contract.
#  make sure your account got ether - get it from Dr. Mohd Anuar or IPTM Secretariats

#7A More secure to run geth as a Normal node using this command
#   More secure, close many ports & services
geth --networkid 496 --port 30303 --nodiscover --datadir data_IPTM/node1/chain-data --syncmode full --gcmode=archive --ipcpath "data_IPTM\node1\geth.ipc" --allow-insecure-unlock console  

#7B Please choose #7A. Unsecure to run geth as a Normal node in Public IP using this command, Normal node is Ok to run geth in local machine.
// Usecure open all ports. !!WARNING DO NOT USE THIS COMMAND IN SEALER NODE OR NODE WITH ETHER!!
geth --networkid 496 --rpc --rpcaddr 0.0.0.0 --port 30303 --rpcport 8545 --rpcapi="admin,debug,net,eth,shh,web3,txpool,personel,db,clique" --rpccorsdomain "*" --rpcvhosts "*" --nodiscover --datadir data_IPTM/node1/chain-data --wsapi="admin,debug,eth,net,web3,network,debug,txpool,personel,db,clique" --ws --wsaddr 0.0.0.0 --wsport 8546 --wsorigins "*" --syncmode full --gcmode=archive --allow-insecure-unlock --ipcpath "data_IPTM\node1\geth.ipc" console 


#8 You are in Geth Terminal
#  see all accounts in directory "data_IPTM\node1\chain-data\keystore"
#  you must download this file in Windows Terminal and place it in the geth binary directory using: 
#  wget https://raw.githubusercontent.com/iexplotech/IPTM_Sample_Codes/master/myBalance.js -O myBalance.js
loadScript("myBalance.js")
checkAllBalances()


#9 You are in Geth Terminal
#  get your enode address for P2P communication
admin.nodeInfo.enode


#10 SKIPPED Step: Using IPTM Bootnodes Client (Refer to another manual: IPTM Bootnode Client 2020), You are in Geth Terminal
#   connecting to IPTM Testnet Network
#   adding enode from iptm.online ("x.x.x.x"), iptm.iexplotech.com ("x.x.x.x") or www.iexplotech.com ("x.x.x.x")
admin.addPeer("enode://975db1d3f5ff52f922d3ff2638179ad54f633c59dece84caa7c6f25d18f5a0207d5ac4fd48428a85e81ea5afe36bdc6f52b3c063ec66242f5b1fe7b234736967@"x.x.x.x":30303?discport=0")


#11 You are in Geth Terminal
#   verify connectivity after perform step #9
web3.eth.getBlock("latest")
eth.syncing
web3.eth.blockNumber
web3.eth.getBlock("100")
net.listening
net.peerCount
admin.peers


#12 You are in Geth Terminal
#   connectivity status:
#   i) Firewall block outbound port 30303. You always at block 0. Sync Failed!!!
#   ii) Firewall block inbound port 30303. You always late by 20~60 blocks. Sync Slowed!!!


#13 You are in Geth Terminal
#   solving connectivity status:
#	open Firewall for inbound and outbound port 30303
#   need to configure your local Firewall or Cloud Firewall. If Behind Firewall or NAT, may request port forwarding from network admin.
#   if you are using mobile broadband you may have problem ii) Firewall block inbound port 30303.
#	if you are inside University network. Most university Firewall block inbound and outbound port 30303.

#14 You are in Geth Terminal
#   exit the running node. You must exit properly to avoid block corrupted.
exit


#15 You are in Windows Terminal
#	re-run geth node, go to step #7	
#   Skipped, No need to do addPeer() step #10 everytime you restart the geth client


#16 You are in Windows Terminal. Open New Windows Terminal
#   connect to running geth client using different Windows Terminal
#	recomended to use different Windows Terminal for easy interaction with a running geth client
geth attach ipc:\\.\pipe\data_IPTM\node1\geth.ipc


# EXTRA - SKIPPED. Do if you are instructed by IPTM Secretariat
//Change default gasLimit to 6000000 wei (6 Million)
//Will start your node and keep pushing the gas limit towards 6000000 as mining continues. Over time, the gas limit would have grown so large that you'll not have the Error: exceeds block gas limit issue anymore.
--targetgaslimit "6000000"


############################## Other Interesting Commands ##########################
// You are in Geth Terminal.

// get list of signer nodes (write block)
clique.getSigners()

// check ETH accounts[0] balance
web3.fromWei(eth.getBalance(eth.accounts[0]), "ether")

// check ETH address balance from accounts:
web3.fromWei(eth.getBalance("0x88888bd5756ac3278bc55bb326eb0dc0c96eba60"), "ether");

// Unlock accounts[0] for 60 seconds for transaction
web3.personal.unlockAccount(eth.accounts[0], "123456", 60)

// If you want to Unlock One Month for Sealer Node
web3.personal.unlockAccount(eth.accounts[0], "123456", 2600000)

// Lock accounts[0]
personal.lockAccount(eth.accounts[0])

// E.g: Send 1 ether from accounts[0] to ETH address, You must unlock accounts[0] before sending transaction
eth.sendTransaction({from:eth.accounts[0], to:"0x0000706e899d0f46c5efe22c4caaeb885af4dcac", value: web3.toWei(1, "ether")})

// E.g: Send 1 ether from "0xf1326b3d4fbe5049fe94ed8a622f227d36a6d5ee" to eth.accounts[1], You must unlock "0xf1326b3d4fbe5049fe94ed8a622f227d36a6d5ee" before sending transaction
eth.sendTransaction({from:"0xf1326b3d4fbe5049fe94ed8a622f227d36a6d5ee", to:eth.accounts[1], value: web3.toWei(1, "ether")})

// Get transaction info
eth.getTransactionReceipt("0x69342d236756e724c8723e38159717f783ca13660e1213bf3e1e29a7e86d26c4")

// Mining. Only Sealer Nodes are authorized to do mining or create new block
miner.start(1)
miner.stop()

// Account Management
// !Set default account, !You must set default account before do any transaction
web3.eth.defaultAccount = eth.accounts[0]

// check/set default account for mining - reward will go to this account, Applied only for IPTM Sealer Nodes
eth.coinbase
miner.setEtherbase(web3.eth.accounts[0])

// Create NEW Account, e.g: password "123456"
personal.newAccount("123456")
eth.accounts

// Get Chechsum ETH Address
web3.toChecksumAddress(eth.accounts[0])

//Get Latest Block Gas Limit
eth.getBlock("latest").gasLimit

//Rollback blockchain to block 0. 
//Not recomended to run except block corrupted. Using Hexa number. You may roll to other block numbers such as 0xFFFF
debug.setHead("0x0")


############################## Other Interesting Commands ##########################
// You are in Linux Terminal.

// Update/Change Account Password
// geth --datadir <directory> account update <eth address>
// example: geth --datadir accounts/ account update 207192ac067ccd1dde4bba9d64e496f09a70c34d
// example: geth --datadir data_IPTM/node1/chain-data account update 80Ce17271FfA4a7F66E2cbF3561a6946587F470D




